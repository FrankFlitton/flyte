// @generated by protoc-gen-es v1.4.2 with parameter "target=js+dts+ts,keep_empty_files=false"
// @generated from file flyteidl/service/external_plugin_service.proto (package flyteidl.service, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { LiteralMap } from "../core/literals_pb.js";
import { TaskTemplate } from "../core/tasks_pb.js";

/**
 * The state of the execution is used to control its visibility in the UI/CLI.
 *
 * @generated from enum flyteidl.service.State
 * @deprecated
 */
export const State = proto3.makeEnum(
  "flyteidl.service.State",
  [
    {no: 0, name: "RETRYABLE_FAILURE"},
    {no: 1, name: "PERMANENT_FAILURE"},
    {no: 2, name: "PENDING"},
    {no: 3, name: "RUNNING"},
    {no: 4, name: "SUCCEEDED"},
  ],
);

/**
 * Represents a request structure to create task.
 *
 * @generated from message flyteidl.service.TaskCreateRequest
 * @deprecated
 */
export const TaskCreateRequest = proto3.makeMessageType(
  "flyteidl.service.TaskCreateRequest",
  () => [
    { no: 1, name: "inputs", kind: "message", T: LiteralMap },
    { no: 2, name: "template", kind: "message", T: TaskTemplate },
    { no: 3, name: "output_prefix", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * Represents a create response structure.
 *
 * @generated from message flyteidl.service.TaskCreateResponse
 * @deprecated
 */
export const TaskCreateResponse = proto3.makeMessageType(
  "flyteidl.service.TaskCreateResponse",
  () => [
    { no: 1, name: "job_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * A message used to fetch a job state from backend plugin server.
 *
 * @generated from message flyteidl.service.TaskGetRequest
 * @deprecated
 */
export const TaskGetRequest = proto3.makeMessageType(
  "flyteidl.service.TaskGetRequest",
  () => [
    { no: 1, name: "task_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "job_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * Response to get an individual task state.
 *
 * @generated from message flyteidl.service.TaskGetResponse
 * @deprecated
 */
export const TaskGetResponse = proto3.makeMessageType(
  "flyteidl.service.TaskGetResponse",
  () => [
    { no: 1, name: "state", kind: "enum", T: proto3.getEnumType(State) },
    { no: 2, name: "outputs", kind: "message", T: LiteralMap },
  ],
);

/**
 * A message used to delete a task.
 *
 * @generated from message flyteidl.service.TaskDeleteRequest
 * @deprecated
 */
export const TaskDeleteRequest = proto3.makeMessageType(
  "flyteidl.service.TaskDeleteRequest",
  () => [
    { no: 1, name: "task_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "job_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * Response to delete a task.
 *
 * @generated from message flyteidl.service.TaskDeleteResponse
 * @deprecated
 */
export const TaskDeleteResponse = proto3.makeMessageType(
  "flyteidl.service.TaskDeleteResponse",
  [],
);

