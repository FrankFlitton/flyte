// @generated by protoc-gen-connect-es v1.1.3 with parameter "target=js+dts+ts"
// @generated from file flyteidl/service/external_plugin_service.proto (package flyteidl.service, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { TaskCreateRequest, TaskCreateResponse, TaskDeleteRequest, TaskDeleteResponse, TaskGetRequest, TaskGetResponse } from "./external_plugin_service_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * ExternalPluginService defines an RPC Service that allows propeller to send the request to the backend plugin server.
 *
 * @generated from service flyteidl.service.ExternalPluginService
 */
export declare const ExternalPluginService: {
  readonly typeName: "flyteidl.service.ExternalPluginService",
  readonly methods: {
    /**
     * Send a task create request to the backend plugin server.
     *
     * @generated from rpc flyteidl.service.ExternalPluginService.CreateTask
     * @deprecated
     */
    readonly createTask: {
      readonly name: "CreateTask",
      readonly I: typeof TaskCreateRequest,
      readonly O: typeof TaskCreateResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Get job status.
     *
     * @generated from rpc flyteidl.service.ExternalPluginService.GetTask
     * @deprecated
     */
    readonly getTask: {
      readonly name: "GetTask",
      readonly I: typeof TaskGetRequest,
      readonly O: typeof TaskGetResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Delete the task resource.
     *
     * @generated from rpc flyteidl.service.ExternalPluginService.DeleteTask
     * @deprecated
     */
    readonly deleteTask: {
      readonly name: "DeleteTask",
      readonly I: typeof TaskDeleteRequest,
      readonly O: typeof TaskDeleteResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};

