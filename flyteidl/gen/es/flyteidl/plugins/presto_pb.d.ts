// @generated by protoc-gen-es v1.4.2 with parameter "target=js+dts+ts,keep_empty_files=false"
// @generated from file flyteidl/plugins/presto.proto (package flyteidl.plugins, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * This message works with the 'presto' task type in the SDK and is the object that will be in the 'custom' field
 * of a Presto task's TaskTemplate
 *
 * @generated from message flyteidl.plugins.PrestoQuery
 */
export declare class PrestoQuery extends Message<PrestoQuery> {
  /**
   * @generated from field: string routing_group = 1;
   */
  routingGroup: string;

  /**
   * @generated from field: string catalog = 2;
   */
  catalog: string;

  /**
   * @generated from field: string schema = 3;
   */
  schema: string;

  /**
   * @generated from field: string statement = 4;
   */
  statement: string;

  constructor(data?: PartialMessage<PrestoQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "flyteidl.plugins.PrestoQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PrestoQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PrestoQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PrestoQuery;

  static equals(a: PrestoQuery | PlainMessage<PrestoQuery> | undefined, b: PrestoQuery | PlainMessage<PrestoQuery> | undefined): boolean;
}

