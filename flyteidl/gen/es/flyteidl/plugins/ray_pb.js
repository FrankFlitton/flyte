// @generated by protoc-gen-es v1.4.2 with parameter "target=js+dts+ts,keep_empty_files=false"
// @generated from file flyteidl/plugins/ray.proto (package flyteidl.plugins, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * RayJobSpec defines the desired state of RayJob
 *
 * @generated from message flyteidl.plugins.RayJob
 */
export const RayJob = proto3.makeMessageType(
  "flyteidl.plugins.RayJob",
  () => [
    { no: 1, name: "ray_cluster", kind: "message", T: RayCluster },
    { no: 2, name: "runtime_env", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * Define Ray cluster defines the desired state of RayCluster
 *
 * @generated from message flyteidl.plugins.RayCluster
 */
export const RayCluster = proto3.makeMessageType(
  "flyteidl.plugins.RayCluster",
  () => [
    { no: 1, name: "head_group_spec", kind: "message", T: HeadGroupSpec },
    { no: 2, name: "worker_group_spec", kind: "message", T: WorkerGroupSpec, repeated: true },
  ],
);

/**
 * HeadGroupSpec are the spec for the head pod
 *
 * @generated from message flyteidl.plugins.HeadGroupSpec
 */
export const HeadGroupSpec = proto3.makeMessageType(
  "flyteidl.plugins.HeadGroupSpec",
  () => [
    { no: 1, name: "ray_start_params", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
  ],
);

/**
 * WorkerGroupSpec are the specs for the worker pods
 *
 * @generated from message flyteidl.plugins.WorkerGroupSpec
 */
export const WorkerGroupSpec = proto3.makeMessageType(
  "flyteidl.plugins.WorkerGroupSpec",
  () => [
    { no: 1, name: "group_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "replicas", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "min_replicas", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "max_replicas", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "ray_start_params", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
  ],
);

