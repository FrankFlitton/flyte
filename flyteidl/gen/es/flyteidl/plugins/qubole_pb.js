// @generated by protoc-gen-es v1.4.2 with parameter "target=js+dts+ts,keep_empty_files=false"
// @generated from file flyteidl/plugins/qubole.proto (package flyteidl.plugins, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * Defines a query to execute on a hive cluster.
 *
 * @generated from message flyteidl.plugins.HiveQuery
 */
export const HiveQuery = proto3.makeMessageType(
  "flyteidl.plugins.HiveQuery",
  () => [
    { no: 1, name: "query", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "timeout_sec", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "retryCount", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ],
);

/**
 * Defines a collection of hive queries.
 *
 * @generated from message flyteidl.plugins.HiveQueryCollection
 */
export const HiveQueryCollection = proto3.makeMessageType(
  "flyteidl.plugins.HiveQueryCollection",
  () => [
    { no: 2, name: "queries", kind: "message", T: HiveQuery, repeated: true },
  ],
);

/**
 * This message works with the 'hive' task type in the SDK and is the object that will be in the 'custom' field
 * of a hive task's TaskTemplate
 *
 * @generated from message flyteidl.plugins.QuboleHiveJob
 */
export const QuboleHiveJob = proto3.makeMessageType(
  "flyteidl.plugins.QuboleHiveJob",
  () => [
    { no: 1, name: "cluster_label", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "query_collection", kind: "message", T: HiveQueryCollection },
    { no: 3, name: "tags", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 4, name: "query", kind: "message", T: HiveQuery },
  ],
);

