// @generated by protoc-gen-es v1.4.2 with parameter "target=js+dts+ts,keep_empty_files=false"
// @generated from file flyteidl/plugins/array_job.proto (package flyteidl.plugins, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * Describes a job that can process independent pieces of data concurrently. Multiple copies of the runnable component
 * will be executed concurrently.
 *
 * @generated from message flyteidl.plugins.ArrayJob
 */
export declare class ArrayJob extends Message<ArrayJob> {
  /**
   * Defines the maximum number of instances to bring up concurrently at any given point. Note that this is an
   * optimistic restriction and that, due to network partitioning or other failures, the actual number of currently
   * running instances might be more. This has to be a positive number if assigned. Default value is size.
   *
   * @generated from field: int64 parallelism = 1;
   */
  parallelism: bigint;

  /**
   * Defines the number of instances to launch at most. This number should match the size of the input if the job
   * requires processing of all input data. This has to be a positive number.
   * In the case this is not defined, the back-end will determine the size at run-time by reading the inputs.
   *
   * @generated from field: int64 size = 2;
   */
  size: bigint;

  /**
   * @generated from oneof flyteidl.plugins.ArrayJob.success_criteria
   */
  successCriteria: {
    /**
     * An absolute number of the minimum number of successful completions of subtasks. As soon as this criteria is met,
     * the array job will be marked as successful and outputs will be computed. This has to be a non-negative number if
     * assigned. Default value is size (if specified).
     *
     * @generated from field: int64 min_successes = 3;
     */
    value: bigint;
    case: "minSuccesses";
  } | {
    /**
     * If the array job size is not known beforehand, the min_success_ratio can instead be used to determine when an array
     * job can be marked successful.
     *
     * @generated from field: float min_success_ratio = 4;
     */
    value: number;
    case: "minSuccessRatio";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<ArrayJob>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "flyteidl.plugins.ArrayJob";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ArrayJob;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ArrayJob;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ArrayJob;

  static equals(a: ArrayJob | PlainMessage<ArrayJob> | undefined, b: ArrayJob | PlainMessage<ArrayJob> | undefined): boolean;
}

