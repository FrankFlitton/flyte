// @generated by protoc-gen-es v1.4.2 with parameter "target=js+dts+ts,keep_empty_files=false"
// @generated from file flyteidl/plugins/kubeflow/mpi.proto (package flyteidl.plugins.kubeflow, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { RestartPolicy, RunPolicy } from "./common_pb.js";
import type { Resources } from "../../core/tasks_pb.js";

/**
 * Proto for plugin that enables distributed training using https://github.com/kubeflow/mpi-operator
 *
 * @generated from message flyteidl.plugins.kubeflow.DistributedMPITrainingTask
 */
export declare class DistributedMPITrainingTask extends Message<DistributedMPITrainingTask> {
  /**
   * Worker replicas spec
   *
   * @generated from field: flyteidl.plugins.kubeflow.DistributedMPITrainingReplicaSpec worker_replicas = 1;
   */
  workerReplicas?: DistributedMPITrainingReplicaSpec;

  /**
   * Master replicas spec
   *
   * @generated from field: flyteidl.plugins.kubeflow.DistributedMPITrainingReplicaSpec launcher_replicas = 2;
   */
  launcherReplicas?: DistributedMPITrainingReplicaSpec;

  /**
   * RunPolicy encapsulates various runtime policies of the distributed training
   * job, for example how to clean up resources and how long the job can stay
   * active.
   *
   * @generated from field: flyteidl.plugins.kubeflow.RunPolicy run_policy = 3;
   */
  runPolicy?: RunPolicy;

  /**
   * Number of slots per worker
   *
   * @generated from field: int32 slots = 4;
   */
  slots: number;

  constructor(data?: PartialMessage<DistributedMPITrainingTask>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "flyteidl.plugins.kubeflow.DistributedMPITrainingTask";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DistributedMPITrainingTask;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DistributedMPITrainingTask;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DistributedMPITrainingTask;

  static equals(a: DistributedMPITrainingTask | PlainMessage<DistributedMPITrainingTask> | undefined, b: DistributedMPITrainingTask | PlainMessage<DistributedMPITrainingTask> | undefined): boolean;
}

/**
 * Replica specification for distributed MPI training
 *
 * @generated from message flyteidl.plugins.kubeflow.DistributedMPITrainingReplicaSpec
 */
export declare class DistributedMPITrainingReplicaSpec extends Message<DistributedMPITrainingReplicaSpec> {
  /**
   * Number of replicas
   *
   * @generated from field: int32 replicas = 1;
   */
  replicas: number;

  /**
   * Image used for the replica group
   *
   * @generated from field: string image = 2;
   */
  image: string;

  /**
   * Resources required for the replica group
   *
   * @generated from field: flyteidl.core.Resources resources = 3;
   */
  resources?: Resources;

  /**
   * Restart policy determines whether pods will be restarted when they exit
   *
   * @generated from field: flyteidl.plugins.kubeflow.RestartPolicy restart_policy = 4;
   */
  restartPolicy: RestartPolicy;

  /**
   * MPI sometimes requires different command set for different replica groups
   *
   * @generated from field: repeated string command = 5;
   */
  command: string[];

  constructor(data?: PartialMessage<DistributedMPITrainingReplicaSpec>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "flyteidl.plugins.kubeflow.DistributedMPITrainingReplicaSpec";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DistributedMPITrainingReplicaSpec;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DistributedMPITrainingReplicaSpec;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DistributedMPITrainingReplicaSpec;

  static equals(a: DistributedMPITrainingReplicaSpec | PlainMessage<DistributedMPITrainingReplicaSpec> | undefined, b: DistributedMPITrainingReplicaSpec | PlainMessage<DistributedMPITrainingReplicaSpec> | undefined): boolean;
}

