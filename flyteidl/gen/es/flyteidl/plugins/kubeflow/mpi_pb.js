// @generated by protoc-gen-es v1.4.2 with parameter "target=js+dts+ts,keep_empty_files=false"
// @generated from file flyteidl/plugins/kubeflow/mpi.proto (package flyteidl.plugins.kubeflow, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { RestartPolicy, RunPolicy } from "./common_pb.js";
import { Resources } from "../../core/tasks_pb.js";

/**
 * Proto for plugin that enables distributed training using https://github.com/kubeflow/mpi-operator
 *
 * @generated from message flyteidl.plugins.kubeflow.DistributedMPITrainingTask
 */
export const DistributedMPITrainingTask = proto3.makeMessageType(
  "flyteidl.plugins.kubeflow.DistributedMPITrainingTask",
  () => [
    { no: 1, name: "worker_replicas", kind: "message", T: DistributedMPITrainingReplicaSpec },
    { no: 2, name: "launcher_replicas", kind: "message", T: DistributedMPITrainingReplicaSpec },
    { no: 3, name: "run_policy", kind: "message", T: RunPolicy },
    { no: 4, name: "slots", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 * Replica specification for distributed MPI training
 *
 * @generated from message flyteidl.plugins.kubeflow.DistributedMPITrainingReplicaSpec
 */
export const DistributedMPITrainingReplicaSpec = proto3.makeMessageType(
  "flyteidl.plugins.kubeflow.DistributedMPITrainingReplicaSpec",
  () => [
    { no: 1, name: "replicas", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "image", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "resources", kind: "message", T: Resources },
    { no: 4, name: "restart_policy", kind: "enum", T: proto3.getEnumType(RestartPolicy) },
    { no: 5, name: "command", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

