// @generated by protoc-gen-es v1.4.2 with parameter "target=js+dts+ts,keep_empty_files=false"
// @generated from file flyteidl/plugins/kubeflow/common.proto (package flyteidl.plugins.kubeflow, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum flyteidl.plugins.kubeflow.RestartPolicy
 */
export const RestartPolicy = proto3.makeEnum(
  "flyteidl.plugins.kubeflow.RestartPolicy",
  [
    {no: 0, name: "RESTART_POLICY_NEVER", localName: "NEVER"},
    {no: 1, name: "RESTART_POLICY_ON_FAILURE", localName: "ON_FAILURE"},
    {no: 2, name: "RESTART_POLICY_ALWAYS", localName: "ALWAYS"},
  ],
);

/**
 * @generated from enum flyteidl.plugins.kubeflow.CleanPodPolicy
 */
export const CleanPodPolicy = proto3.makeEnum(
  "flyteidl.plugins.kubeflow.CleanPodPolicy",
  [
    {no: 0, name: "CLEANPOD_POLICY_NONE"},
    {no: 1, name: "CLEANPOD_POLICY_RUNNING"},
    {no: 2, name: "CLEANPOD_POLICY_ALL"},
  ],
);

/**
 * @generated from message flyteidl.plugins.kubeflow.RunPolicy
 */
export const RunPolicy = proto3.makeMessageType(
  "flyteidl.plugins.kubeflow.RunPolicy",
  () => [
    { no: 1, name: "clean_pod_policy", kind: "enum", T: proto3.getEnumType(CleanPodPolicy) },
    { no: 2, name: "ttl_seconds_after_finished", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "active_deadline_seconds", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "backoff_limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

