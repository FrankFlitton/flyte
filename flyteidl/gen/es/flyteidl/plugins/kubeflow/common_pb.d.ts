// @generated by protoc-gen-es v1.4.2 with parameter "target=js+dts+ts,keep_empty_files=false"
// @generated from file flyteidl/plugins/kubeflow/common.proto (package flyteidl.plugins.kubeflow, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum flyteidl.plugins.kubeflow.RestartPolicy
 */
export declare enum RestartPolicy {
  /**
   * @generated from enum value: RESTART_POLICY_NEVER = 0;
   */
  NEVER = 0,

  /**
   * @generated from enum value: RESTART_POLICY_ON_FAILURE = 1;
   */
  ON_FAILURE = 1,

  /**
   * @generated from enum value: RESTART_POLICY_ALWAYS = 2;
   */
  ALWAYS = 2,
}

/**
 * @generated from enum flyteidl.plugins.kubeflow.CleanPodPolicy
 */
export declare enum CleanPodPolicy {
  /**
   * @generated from enum value: CLEANPOD_POLICY_NONE = 0;
   */
  CLEANPOD_POLICY_NONE = 0,

  /**
   * @generated from enum value: CLEANPOD_POLICY_RUNNING = 1;
   */
  CLEANPOD_POLICY_RUNNING = 1,

  /**
   * @generated from enum value: CLEANPOD_POLICY_ALL = 2;
   */
  CLEANPOD_POLICY_ALL = 2,
}

/**
 * @generated from message flyteidl.plugins.kubeflow.RunPolicy
 */
export declare class RunPolicy extends Message<RunPolicy> {
  /**
   * Defines the policy to kill pods after the job completes. Default to None.
   *
   * @generated from field: flyteidl.plugins.kubeflow.CleanPodPolicy clean_pod_policy = 1;
   */
  cleanPodPolicy: CleanPodPolicy;

  /**
   * TTL to clean up jobs. Default to infinite.
   *
   * @generated from field: int32 ttl_seconds_after_finished = 2;
   */
  ttlSecondsAfterFinished: number;

  /**
   * Specifies the duration in seconds relative to the startTime that the job may be active
   * before the system tries to terminate it; value must be positive integer.
   *
   * @generated from field: int32 active_deadline_seconds = 3;
   */
  activeDeadlineSeconds: number;

  /**
   * Number of retries before marking this job failed.
   *
   * @generated from field: int32 backoff_limit = 4;
   */
  backoffLimit: number;

  constructor(data?: PartialMessage<RunPolicy>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "flyteidl.plugins.kubeflow.RunPolicy";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RunPolicy;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RunPolicy;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RunPolicy;

  static equals(a: RunPolicy | PlainMessage<RunPolicy> | undefined, b: RunPolicy | PlainMessage<RunPolicy> | undefined): boolean;
}

