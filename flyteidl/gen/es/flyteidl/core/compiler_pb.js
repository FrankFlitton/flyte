// @generated by protoc-gen-es v1.4.2 with parameter "target=js+dts+ts,keep_empty_files=false"
// @generated from file flyteidl/core/compiler.proto (package flyteidl.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { WorkflowTemplate } from "./workflow_pb.js";
import { TaskTemplate } from "./tasks_pb.js";

/**
 * Adjacency list for the workflow. This is created as part of the compilation process. Every process after the compilation
 * step uses this created ConnectionSet
 *
 * @generated from message flyteidl.core.ConnectionSet
 */
export const ConnectionSet = proto3.makeMessageType(
  "flyteidl.core.ConnectionSet",
  () => [
    { no: 7, name: "downstream", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: ConnectionSet_IdList} },
    { no: 8, name: "upstream", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: ConnectionSet_IdList} },
  ],
);

/**
 * @generated from message flyteidl.core.ConnectionSet.IdList
 */
export const ConnectionSet_IdList = proto3.makeMessageType(
  "flyteidl.core.ConnectionSet.IdList",
  () => [
    { no: 1, name: "ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
  {localName: "ConnectionSet_IdList"},
);

/**
 * Output of the compilation Step. This object represents one workflow. We store more metadata at this layer
 *
 * @generated from message flyteidl.core.CompiledWorkflow
 */
export const CompiledWorkflow = proto3.makeMessageType(
  "flyteidl.core.CompiledWorkflow",
  () => [
    { no: 1, name: "template", kind: "message", T: WorkflowTemplate },
    { no: 2, name: "connections", kind: "message", T: ConnectionSet },
  ],
);

/**
 * Output of the Compilation step. This object represent one Task. We store more metadata at this layer
 *
 * @generated from message flyteidl.core.CompiledTask
 */
export const CompiledTask = proto3.makeMessageType(
  "flyteidl.core.CompiledTask",
  () => [
    { no: 1, name: "template", kind: "message", T: TaskTemplate },
  ],
);

/**
 * A Compiled Workflow Closure contains all the information required to start a new execution, or to visualize a workflow
 * and its details. The CompiledWorkflowClosure should always contain a primary workflow, that is the main workflow that
 * will being the execution. All subworkflows are denormalized. WorkflowNodes refer to the workflow identifiers of
 * compiled subworkflows.
 *
 * @generated from message flyteidl.core.CompiledWorkflowClosure
 */
export const CompiledWorkflowClosure = proto3.makeMessageType(
  "flyteidl.core.CompiledWorkflowClosure",
  () => [
    { no: 1, name: "primary", kind: "message", T: CompiledWorkflow },
    { no: 2, name: "sub_workflows", kind: "message", T: CompiledWorkflow, repeated: true },
    { no: 3, name: "tasks", kind: "message", T: CompiledTask, repeated: true },
  ],
);

