// @generated by protoc-gen-es v1.4.2 with parameter "target=js+dts+ts,keep_empty_files=false"
// @generated from file flyteidl/core/catalog.proto (package flyteidl.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { Identifier, TaskExecutionIdentifier } from "./identifier_pb.js";

/**
 * Indicates the status of CatalogCaching. The reason why this is not embedded in TaskNodeMetadata is, that we may use for other types of nodes as well in the future
 *
 * @generated from enum flyteidl.core.CatalogCacheStatus
 */
export const CatalogCacheStatus = proto3.makeEnum(
  "flyteidl.core.CatalogCacheStatus",
  [
    {no: 0, name: "CACHE_DISABLED"},
    {no: 1, name: "CACHE_MISS"},
    {no: 2, name: "CACHE_HIT"},
    {no: 3, name: "CACHE_POPULATED"},
    {no: 4, name: "CACHE_LOOKUP_FAILURE"},
    {no: 5, name: "CACHE_PUT_FAILURE"},
    {no: 6, name: "CACHE_SKIPPED"},
  ],
);

/**
 * @generated from message flyteidl.core.CatalogArtifactTag
 */
export const CatalogArtifactTag = proto3.makeMessageType(
  "flyteidl.core.CatalogArtifactTag",
  () => [
    { no: 1, name: "artifact_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * Catalog artifact information with specific metadata
 *
 * @generated from message flyteidl.core.CatalogMetadata
 */
export const CatalogMetadata = proto3.makeMessageType(
  "flyteidl.core.CatalogMetadata",
  () => [
    { no: 1, name: "dataset_id", kind: "message", T: Identifier },
    { no: 2, name: "artifact_tag", kind: "message", T: CatalogArtifactTag },
    { no: 3, name: "source_task_execution", kind: "message", T: TaskExecutionIdentifier, oneof: "source_execution" },
  ],
);

/**
 * @generated from message flyteidl.core.CatalogReservation
 */
export const CatalogReservation = proto3.makeMessageType(
  "flyteidl.core.CatalogReservation",
  [],
);

/**
 * Indicates the status of a catalog reservation operation.
 *
 * @generated from enum flyteidl.core.CatalogReservation.Status
 */
export const CatalogReservation_Status = proto3.makeEnum(
  "flyteidl.core.CatalogReservation.Status",
  [
    {no: 0, name: "RESERVATION_DISABLED"},
    {no: 1, name: "RESERVATION_ACQUIRED"},
    {no: 2, name: "RESERVATION_EXISTS"},
    {no: 3, name: "RESERVATION_RELEASED"},
    {no: 4, name: "RESERVATION_FAILURE"},
  ],
);

