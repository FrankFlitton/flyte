// @generated by protoc-gen-es v1.4.2 with parameter "target=js+dts+ts,keep_empty_files=false"
// @generated from file flyteidl/core/workflow_closure.proto (package flyteidl.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { WorkflowTemplate } from "./workflow_pb.js";
import type { TaskTemplate } from "./tasks_pb.js";

/**
 * Defines an enclosed package of workflow and tasks it references.
 *
 * @generated from message flyteidl.core.WorkflowClosure
 */
export declare class WorkflowClosure extends Message<WorkflowClosure> {
  /**
   * required. Workflow template.
   *
   * @generated from field: flyteidl.core.WorkflowTemplate workflow = 1;
   */
  workflow?: WorkflowTemplate;

  /**
   * optional. A collection of tasks referenced by the workflow. Only needed if the workflow
   * references tasks.
   *
   * @generated from field: repeated flyteidl.core.TaskTemplate tasks = 2;
   */
  tasks: TaskTemplate[];

  constructor(data?: PartialMessage<WorkflowClosure>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "flyteidl.core.WorkflowClosure";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WorkflowClosure;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WorkflowClosure;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WorkflowClosure;

  static equals(a: WorkflowClosure | PlainMessage<WorkflowClosure> | undefined, b: WorkflowClosure | PlainMessage<WorkflowClosure> | undefined): boolean;
}

