// @generated by protoc-gen-es v1.4.2 with parameter "target=js+dts+ts,keep_empty_files=false"
// @generated from file flyteidl/core/interface.proto (package flyteidl.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { LiteralType } from "./types_pb.js";
import { Literal } from "./literals_pb.js";

/**
 * Defines a strongly typed variable.
 *
 * @generated from message flyteidl.core.Variable
 */
export const Variable = proto3.makeMessageType(
  "flyteidl.core.Variable",
  () => [
    { no: 1, name: "type", kind: "message", T: LiteralType },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * A map of Variables
 *
 * @generated from message flyteidl.core.VariableMap
 */
export const VariableMap = proto3.makeMessageType(
  "flyteidl.core.VariableMap",
  () => [
    { no: 1, name: "variables", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: Variable} },
  ],
);

/**
 * Defines strongly typed inputs and outputs.
 *
 * @generated from message flyteidl.core.TypedInterface
 */
export const TypedInterface = proto3.makeMessageType(
  "flyteidl.core.TypedInterface",
  () => [
    { no: 1, name: "inputs", kind: "message", T: VariableMap },
    { no: 2, name: "outputs", kind: "message", T: VariableMap },
  ],
);

/**
 * A parameter is used as input to a launch plan and has
 * the special ability to have a default value or mark itself as required.
 *
 * @generated from message flyteidl.core.Parameter
 */
export const Parameter = proto3.makeMessageType(
  "flyteidl.core.Parameter",
  () => [
    { no: 1, name: "var", kind: "message", T: Variable },
    { no: 2, name: "default", kind: "message", T: Literal, oneof: "behavior" },
    { no: 3, name: "required", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "behavior" },
  ],
);

/**
 * A map of Parameters.
 *
 * @generated from message flyteidl.core.ParameterMap
 */
export const ParameterMap = proto3.makeMessageType(
  "flyteidl.core.ParameterMap",
  () => [
    { no: 1, name: "parameters", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: Parameter} },
  ],
);

