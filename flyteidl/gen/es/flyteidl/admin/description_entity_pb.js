// @generated by protoc-gen-es v1.4.2 with parameter "target=js+dts+ts,keep_empty_files=false"
// @generated from file flyteidl/admin/description_entity.proto (package flyteidl.admin, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { Identifier, ResourceType } from "../core/identifier_pb.js";
import { NamedEntityIdentifier, Sort } from "./common_pb.js";

/**
 * The format of the long description
 *
 * @generated from enum flyteidl.admin.DescriptionFormat
 */
export const DescriptionFormat = proto3.makeEnum(
  "flyteidl.admin.DescriptionFormat",
  [
    {no: 0, name: "DESCRIPTION_FORMAT_UNKNOWN", localName: "UNKNOWN"},
    {no: 1, name: "DESCRIPTION_FORMAT_MARKDOWN", localName: "MARKDOWN"},
    {no: 2, name: "DESCRIPTION_FORMAT_HTML", localName: "HTML"},
    {no: 3, name: "DESCRIPTION_FORMAT_RST", localName: "RST"},
  ],
);

/**
 * DescriptionEntity contains detailed description for the task/workflow.
 * Documentation could provide insight into the algorithms, business use case, etc.
 *
 * @generated from message flyteidl.admin.DescriptionEntity
 */
export const DescriptionEntity = proto3.makeMessageType(
  "flyteidl.admin.DescriptionEntity",
  () => [
    { no: 1, name: "id", kind: "message", T: Identifier },
    { no: 2, name: "short_description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "long_description", kind: "message", T: Description },
    { no: 4, name: "source_code", kind: "message", T: SourceCode },
    { no: 5, name: "tags", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 * Full user description with formatting preserved. This can be rendered
 * by clients, such as the console or command line tools with in-tact
 * formatting.
 *
 * @generated from message flyteidl.admin.Description
 */
export const Description = proto3.makeMessageType(
  "flyteidl.admin.Description",
  () => [
    { no: 1, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "content" },
    { no: 2, name: "uri", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "content" },
    { no: 3, name: "format", kind: "enum", T: proto3.getEnumType(DescriptionFormat) },
    { no: 4, name: "icon_link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * Link to source code used to define this entity
 *
 * @generated from message flyteidl.admin.SourceCode
 */
export const SourceCode = proto3.makeMessageType(
  "flyteidl.admin.SourceCode",
  () => [
    { no: 1, name: "link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * Represents a list of DescriptionEntities returned from the admin.
 * See :ref:`ref_flyteidl.admin.DescriptionEntity` for more details
 *
 * @generated from message flyteidl.admin.DescriptionEntityList
 */
export const DescriptionEntityList = proto3.makeMessageType(
  "flyteidl.admin.DescriptionEntityList",
  () => [
    { no: 1, name: "descriptionEntities", kind: "message", T: DescriptionEntity, repeated: true },
    { no: 2, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * Represents a request structure to retrieve a list of DescriptionEntities.
 * See :ref:`ref_flyteidl.admin.DescriptionEntity` for more details
 *
 * @generated from message flyteidl.admin.DescriptionEntityListRequest
 */
export const DescriptionEntityListRequest = proto3.makeMessageType(
  "flyteidl.admin.DescriptionEntityListRequest",
  () => [
    { no: 1, name: "resource_type", kind: "enum", T: proto3.getEnumType(ResourceType) },
    { no: 2, name: "id", kind: "message", T: NamedEntityIdentifier },
    { no: 3, name: "limit", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 4, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "filters", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "sort_by", kind: "message", T: Sort },
  ],
);

