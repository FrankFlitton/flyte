// @generated by protoc-gen-es v1.4.2 with parameter "target=js+dts+ts,keep_empty_files=false"
// @generated from file flyteidl/admin/task.proto (package flyteidl.admin, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3, Timestamp } from "@bufbuild/protobuf";
import { Identifier } from "../core/identifier_pb.js";
import { TaskTemplate } from "../core/tasks_pb.js";
import { DescriptionEntity } from "./description_entity_pb.js";
import { CompiledTask } from "../core/compiler_pb.js";

/**
 * Represents a request structure to create a revision of a task.
 * See :ref:`ref_flyteidl.admin.Task` for more details
 *
 * @generated from message flyteidl.admin.TaskCreateRequest
 */
export const TaskCreateRequest = proto3.makeMessageType(
  "flyteidl.admin.TaskCreateRequest",
  () => [
    { no: 1, name: "id", kind: "message", T: Identifier },
    { no: 2, name: "spec", kind: "message", T: TaskSpec },
  ],
);

/**
 * Represents a response structure if task creation succeeds.
 *
 * Purposefully empty, may be populated in the future.
 *
 * @generated from message flyteidl.admin.TaskCreateResponse
 */
export const TaskCreateResponse = proto3.makeMessageType(
  "flyteidl.admin.TaskCreateResponse",
  [],
);

/**
 * Flyte workflows are composed of many ordered tasks. That is small, reusable, self-contained logical blocks
 * arranged to process workflow inputs and produce a deterministic set of outputs.
 * Tasks can come in many varieties tuned for specialized behavior. 
 *
 * @generated from message flyteidl.admin.Task
 */
export const Task = proto3.makeMessageType(
  "flyteidl.admin.Task",
  () => [
    { no: 1, name: "id", kind: "message", T: Identifier },
    { no: 2, name: "closure", kind: "message", T: TaskClosure },
    { no: 3, name: "short_description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * Represents a list of tasks returned from the admin.
 * See :ref:`ref_flyteidl.admin.Task` for more details
 *
 * @generated from message flyteidl.admin.TaskList
 */
export const TaskList = proto3.makeMessageType(
  "flyteidl.admin.TaskList",
  () => [
    { no: 1, name: "tasks", kind: "message", T: Task, repeated: true },
    { no: 2, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * Represents a structure that encapsulates the user-configured specification of the task.
 *
 * @generated from message flyteidl.admin.TaskSpec
 */
export const TaskSpec = proto3.makeMessageType(
  "flyteidl.admin.TaskSpec",
  () => [
    { no: 1, name: "template", kind: "message", T: TaskTemplate },
    { no: 2, name: "description", kind: "message", T: DescriptionEntity },
  ],
);

/**
 * Compute task attributes which include values derived from the TaskSpec, as well as plugin-specific data
 * and task metadata.
 *
 * @generated from message flyteidl.admin.TaskClosure
 */
export const TaskClosure = proto3.makeMessageType(
  "flyteidl.admin.TaskClosure",
  () => [
    { no: 1, name: "compiled_task", kind: "message", T: CompiledTask },
    { no: 2, name: "created_at", kind: "message", T: Timestamp },
  ],
);

