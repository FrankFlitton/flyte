// @generated by protoc-gen-es v1.4.2 with parameter "target=js+dts+ts,keep_empty_files=false"
// @generated from file flyteidl/admin/project_domain_attributes.proto (package flyteidl.admin, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { MatchableResource, MatchingAttributes } from "./matchable_resource_pb.js";

/**
 * Defines a set of custom matching attributes which defines resource defaults for a project and domain.
 * For more info on matchable attributes, see :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration`
 *
 * @generated from message flyteidl.admin.ProjectDomainAttributes
 */
export declare class ProjectDomainAttributes extends Message<ProjectDomainAttributes> {
  /**
   * Unique project id for which this set of attributes will be applied.
   *
   * @generated from field: string project = 1;
   */
  project: string;

  /**
   * Unique domain id for which this set of attributes will be applied.
   *
   * @generated from field: string domain = 2;
   */
  domain: string;

  /**
   * @generated from field: flyteidl.admin.MatchingAttributes matching_attributes = 3;
   */
  matchingAttributes?: MatchingAttributes;

  constructor(data?: PartialMessage<ProjectDomainAttributes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "flyteidl.admin.ProjectDomainAttributes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProjectDomainAttributes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProjectDomainAttributes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProjectDomainAttributes;

  static equals(a: ProjectDomainAttributes | PlainMessage<ProjectDomainAttributes> | undefined, b: ProjectDomainAttributes | PlainMessage<ProjectDomainAttributes> | undefined): boolean;
}

/**
 * Sets custom attributes for a project-domain combination.
 * For more info on matchable attributes, see :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration`
 *
 * @generated from message flyteidl.admin.ProjectDomainAttributesUpdateRequest
 */
export declare class ProjectDomainAttributesUpdateRequest extends Message<ProjectDomainAttributesUpdateRequest> {
  /**
   * +required
   *
   * @generated from field: flyteidl.admin.ProjectDomainAttributes attributes = 1;
   */
  attributes?: ProjectDomainAttributes;

  constructor(data?: PartialMessage<ProjectDomainAttributesUpdateRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "flyteidl.admin.ProjectDomainAttributesUpdateRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProjectDomainAttributesUpdateRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProjectDomainAttributesUpdateRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProjectDomainAttributesUpdateRequest;

  static equals(a: ProjectDomainAttributesUpdateRequest | PlainMessage<ProjectDomainAttributesUpdateRequest> | undefined, b: ProjectDomainAttributesUpdateRequest | PlainMessage<ProjectDomainAttributesUpdateRequest> | undefined): boolean;
}

/**
 * Purposefully empty, may be populated in the future.
 *
 * @generated from message flyteidl.admin.ProjectDomainAttributesUpdateResponse
 */
export declare class ProjectDomainAttributesUpdateResponse extends Message<ProjectDomainAttributesUpdateResponse> {
  constructor(data?: PartialMessage<ProjectDomainAttributesUpdateResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "flyteidl.admin.ProjectDomainAttributesUpdateResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProjectDomainAttributesUpdateResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProjectDomainAttributesUpdateResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProjectDomainAttributesUpdateResponse;

  static equals(a: ProjectDomainAttributesUpdateResponse | PlainMessage<ProjectDomainAttributesUpdateResponse> | undefined, b: ProjectDomainAttributesUpdateResponse | PlainMessage<ProjectDomainAttributesUpdateResponse> | undefined): boolean;
}

/**
 * Request to get an individual project domain attribute override.
 * For more info on matchable attributes, see :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration`
 *
 * @generated from message flyteidl.admin.ProjectDomainAttributesGetRequest
 */
export declare class ProjectDomainAttributesGetRequest extends Message<ProjectDomainAttributesGetRequest> {
  /**
   * Unique project id which this set of attributes references.
   * +required
   *
   * @generated from field: string project = 1;
   */
  project: string;

  /**
   * Unique domain id which this set of attributes references.
   * +required
   *
   * @generated from field: string domain = 2;
   */
  domain: string;

  /**
   * Which type of matchable attributes to return.
   * +required
   *
   * @generated from field: flyteidl.admin.MatchableResource resource_type = 3;
   */
  resourceType: MatchableResource;

  constructor(data?: PartialMessage<ProjectDomainAttributesGetRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "flyteidl.admin.ProjectDomainAttributesGetRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProjectDomainAttributesGetRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProjectDomainAttributesGetRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProjectDomainAttributesGetRequest;

  static equals(a: ProjectDomainAttributesGetRequest | PlainMessage<ProjectDomainAttributesGetRequest> | undefined, b: ProjectDomainAttributesGetRequest | PlainMessage<ProjectDomainAttributesGetRequest> | undefined): boolean;
}

/**
 * Response to get an individual project domain attribute override.
 * For more info on matchable attributes, see :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration`
 *
 * @generated from message flyteidl.admin.ProjectDomainAttributesGetResponse
 */
export declare class ProjectDomainAttributesGetResponse extends Message<ProjectDomainAttributesGetResponse> {
  /**
   * @generated from field: flyteidl.admin.ProjectDomainAttributes attributes = 1;
   */
  attributes?: ProjectDomainAttributes;

  constructor(data?: PartialMessage<ProjectDomainAttributesGetResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "flyteidl.admin.ProjectDomainAttributesGetResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProjectDomainAttributesGetResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProjectDomainAttributesGetResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProjectDomainAttributesGetResponse;

  static equals(a: ProjectDomainAttributesGetResponse | PlainMessage<ProjectDomainAttributesGetResponse> | undefined, b: ProjectDomainAttributesGetResponse | PlainMessage<ProjectDomainAttributesGetResponse> | undefined): boolean;
}

/**
 * Request to delete a set matchable project domain attribute override.
 * For more info on matchable attributes, see :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration`
 *
 * @generated from message flyteidl.admin.ProjectDomainAttributesDeleteRequest
 */
export declare class ProjectDomainAttributesDeleteRequest extends Message<ProjectDomainAttributesDeleteRequest> {
  /**
   * Unique project id which this set of attributes references.
   * +required
   *
   * @generated from field: string project = 1;
   */
  project: string;

  /**
   * Unique domain id which this set of attributes references.
   * +required
   *
   * @generated from field: string domain = 2;
   */
  domain: string;

  /**
   * Which type of matchable attributes to delete.
   * +required
   *
   * @generated from field: flyteidl.admin.MatchableResource resource_type = 3;
   */
  resourceType: MatchableResource;

  constructor(data?: PartialMessage<ProjectDomainAttributesDeleteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "flyteidl.admin.ProjectDomainAttributesDeleteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProjectDomainAttributesDeleteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProjectDomainAttributesDeleteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProjectDomainAttributesDeleteRequest;

  static equals(a: ProjectDomainAttributesDeleteRequest | PlainMessage<ProjectDomainAttributesDeleteRequest> | undefined, b: ProjectDomainAttributesDeleteRequest | PlainMessage<ProjectDomainAttributesDeleteRequest> | undefined): boolean;
}

/**
 * Purposefully empty, may be populated in the future.
 *
 * @generated from message flyteidl.admin.ProjectDomainAttributesDeleteResponse
 */
export declare class ProjectDomainAttributesDeleteResponse extends Message<ProjectDomainAttributesDeleteResponse> {
  constructor(data?: PartialMessage<ProjectDomainAttributesDeleteResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "flyteidl.admin.ProjectDomainAttributesDeleteResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProjectDomainAttributesDeleteResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProjectDomainAttributesDeleteResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProjectDomainAttributesDeleteResponse;

  static equals(a: ProjectDomainAttributesDeleteResponse | PlainMessage<ProjectDomainAttributesDeleteResponse> | undefined, b: ProjectDomainAttributesDeleteResponse | PlainMessage<ProjectDomainAttributesDeleteResponse> | undefined): boolean;
}

