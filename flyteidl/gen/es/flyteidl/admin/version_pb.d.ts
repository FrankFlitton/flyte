// @generated by protoc-gen-es v1.4.2 with parameter "target=js+dts+ts,keep_empty_files=false"
// @generated from file flyteidl/admin/version.proto (package flyteidl.admin, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * Response for the GetVersion API
 *
 * @generated from message flyteidl.admin.GetVersionResponse
 */
export declare class GetVersionResponse extends Message<GetVersionResponse> {
  /**
   * The control plane version information. FlyteAdmin and related components
   * form the control plane of Flyte
   *
   * @generated from field: flyteidl.admin.Version control_plane_version = 1;
   */
  controlPlaneVersion?: Version;

  constructor(data?: PartialMessage<GetVersionResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "flyteidl.admin.GetVersionResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetVersionResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetVersionResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetVersionResponse;

  static equals(a: GetVersionResponse | PlainMessage<GetVersionResponse> | undefined, b: GetVersionResponse | PlainMessage<GetVersionResponse> | undefined): boolean;
}

/**
 * Provides Version information for a component
 *
 * @generated from message flyteidl.admin.Version
 */
export declare class Version extends Message<Version> {
  /**
   * Specifies the GIT sha of the build
   *
   * @generated from field: string Build = 1;
   */
  Build: string;

  /**
   * Version for the build, should follow a semver
   *
   * @generated from field: string Version = 2;
   */
  Version: string;

  /**
   * Build timestamp
   *
   * @generated from field: string BuildTime = 3;
   */
  BuildTime: string;

  constructor(data?: PartialMessage<Version>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "flyteidl.admin.Version";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Version;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Version;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Version;

  static equals(a: Version | PlainMessage<Version> | undefined, b: Version | PlainMessage<Version> | undefined): boolean;
}

/**
 * Empty request for GetVersion
 *
 * @generated from message flyteidl.admin.GetVersionRequest
 */
export declare class GetVersionRequest extends Message<GetVersionRequest> {
  constructor(data?: PartialMessage<GetVersionRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "flyteidl.admin.GetVersionRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetVersionRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetVersionRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetVersionRequest;

  static equals(a: GetVersionRequest | PlainMessage<GetVersionRequest> | undefined, b: GetVersionRequest | PlainMessage<GetVersionRequest> | undefined): boolean;
}

