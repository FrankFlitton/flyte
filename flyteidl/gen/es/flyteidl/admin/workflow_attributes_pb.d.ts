// @generated by protoc-gen-es v1.4.2 with parameter "target=js+dts+ts,keep_empty_files=false"
// @generated from file flyteidl/admin/workflow_attributes.proto (package flyteidl.admin, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { MatchableResource, MatchingAttributes } from "./matchable_resource_pb.js";

/**
 * Defines a set of custom matching attributes which defines resource defaults for a project, domain and workflow.
 * For more info on matchable attributes, see :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration`
 *
 * @generated from message flyteidl.admin.WorkflowAttributes
 */
export declare class WorkflowAttributes extends Message<WorkflowAttributes> {
  /**
   * Unique project id for which this set of attributes will be applied.
   *
   * @generated from field: string project = 1;
   */
  project: string;

  /**
   * Unique domain id for which this set of attributes will be applied.
   *
   * @generated from field: string domain = 2;
   */
  domain: string;

  /**
   * Workflow name for which this set of attributes will be applied.
   *
   * @generated from field: string workflow = 3;
   */
  workflow: string;

  /**
   * @generated from field: flyteidl.admin.MatchingAttributes matching_attributes = 4;
   */
  matchingAttributes?: MatchingAttributes;

  constructor(data?: PartialMessage<WorkflowAttributes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "flyteidl.admin.WorkflowAttributes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WorkflowAttributes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WorkflowAttributes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WorkflowAttributes;

  static equals(a: WorkflowAttributes | PlainMessage<WorkflowAttributes> | undefined, b: WorkflowAttributes | PlainMessage<WorkflowAttributes> | undefined): boolean;
}

/**
 * Sets custom attributes for a project, domain and workflow combination.
 * For more info on matchable attributes, see :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration`
 *
 * @generated from message flyteidl.admin.WorkflowAttributesUpdateRequest
 */
export declare class WorkflowAttributesUpdateRequest extends Message<WorkflowAttributesUpdateRequest> {
  /**
   * @generated from field: flyteidl.admin.WorkflowAttributes attributes = 1;
   */
  attributes?: WorkflowAttributes;

  constructor(data?: PartialMessage<WorkflowAttributesUpdateRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "flyteidl.admin.WorkflowAttributesUpdateRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WorkflowAttributesUpdateRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WorkflowAttributesUpdateRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WorkflowAttributesUpdateRequest;

  static equals(a: WorkflowAttributesUpdateRequest | PlainMessage<WorkflowAttributesUpdateRequest> | undefined, b: WorkflowAttributesUpdateRequest | PlainMessage<WorkflowAttributesUpdateRequest> | undefined): boolean;
}

/**
 * Purposefully empty, may be populated in the future.
 *
 * @generated from message flyteidl.admin.WorkflowAttributesUpdateResponse
 */
export declare class WorkflowAttributesUpdateResponse extends Message<WorkflowAttributesUpdateResponse> {
  constructor(data?: PartialMessage<WorkflowAttributesUpdateResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "flyteidl.admin.WorkflowAttributesUpdateResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WorkflowAttributesUpdateResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WorkflowAttributesUpdateResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WorkflowAttributesUpdateResponse;

  static equals(a: WorkflowAttributesUpdateResponse | PlainMessage<WorkflowAttributesUpdateResponse> | undefined, b: WorkflowAttributesUpdateResponse | PlainMessage<WorkflowAttributesUpdateResponse> | undefined): boolean;
}

/**
 * Request to get an individual workflow attribute override.
 * For more info on matchable attributes, see :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration`
 *
 * @generated from message flyteidl.admin.WorkflowAttributesGetRequest
 */
export declare class WorkflowAttributesGetRequest extends Message<WorkflowAttributesGetRequest> {
  /**
   * Unique project id which this set of attributes references.
   * +required
   *
   * @generated from field: string project = 1;
   */
  project: string;

  /**
   * Unique domain id which this set of attributes references.
   * +required
   *
   * @generated from field: string domain = 2;
   */
  domain: string;

  /**
   * Workflow name which this set of attributes references.
   * +required
   *
   * @generated from field: string workflow = 3;
   */
  workflow: string;

  /**
   * Which type of matchable attributes to return.
   * +required
   *
   * @generated from field: flyteidl.admin.MatchableResource resource_type = 4;
   */
  resourceType: MatchableResource;

  constructor(data?: PartialMessage<WorkflowAttributesGetRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "flyteidl.admin.WorkflowAttributesGetRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WorkflowAttributesGetRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WorkflowAttributesGetRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WorkflowAttributesGetRequest;

  static equals(a: WorkflowAttributesGetRequest | PlainMessage<WorkflowAttributesGetRequest> | undefined, b: WorkflowAttributesGetRequest | PlainMessage<WorkflowAttributesGetRequest> | undefined): boolean;
}

/**
 * Response to get an individual workflow attribute override.
 *
 * @generated from message flyteidl.admin.WorkflowAttributesGetResponse
 */
export declare class WorkflowAttributesGetResponse extends Message<WorkflowAttributesGetResponse> {
  /**
   * @generated from field: flyteidl.admin.WorkflowAttributes attributes = 1;
   */
  attributes?: WorkflowAttributes;

  constructor(data?: PartialMessage<WorkflowAttributesGetResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "flyteidl.admin.WorkflowAttributesGetResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WorkflowAttributesGetResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WorkflowAttributesGetResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WorkflowAttributesGetResponse;

  static equals(a: WorkflowAttributesGetResponse | PlainMessage<WorkflowAttributesGetResponse> | undefined, b: WorkflowAttributesGetResponse | PlainMessage<WorkflowAttributesGetResponse> | undefined): boolean;
}

/**
 * Request to delete a set matchable workflow attribute override.
 * For more info on matchable attributes, see :ref:`ref_flyteidl.admin.MatchableAttributesConfiguration`
 *
 * @generated from message flyteidl.admin.WorkflowAttributesDeleteRequest
 */
export declare class WorkflowAttributesDeleteRequest extends Message<WorkflowAttributesDeleteRequest> {
  /**
   * Unique project id which this set of attributes references.
   * +required
   *
   * @generated from field: string project = 1;
   */
  project: string;

  /**
   * Unique domain id which this set of attributes references.
   * +required
   *
   * @generated from field: string domain = 2;
   */
  domain: string;

  /**
   * Workflow name which this set of attributes references.
   * +required
   *
   * @generated from field: string workflow = 3;
   */
  workflow: string;

  /**
   * Which type of matchable attributes to delete.
   * +required
   *
   * @generated from field: flyteidl.admin.MatchableResource resource_type = 4;
   */
  resourceType: MatchableResource;

  constructor(data?: PartialMessage<WorkflowAttributesDeleteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "flyteidl.admin.WorkflowAttributesDeleteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WorkflowAttributesDeleteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WorkflowAttributesDeleteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WorkflowAttributesDeleteRequest;

  static equals(a: WorkflowAttributesDeleteRequest | PlainMessage<WorkflowAttributesDeleteRequest> | undefined, b: WorkflowAttributesDeleteRequest | PlainMessage<WorkflowAttributesDeleteRequest> | undefined): boolean;
}

/**
 * Purposefully empty, may be populated in the future.
 *
 * @generated from message flyteidl.admin.WorkflowAttributesDeleteResponse
 */
export declare class WorkflowAttributesDeleteResponse extends Message<WorkflowAttributesDeleteResponse> {
  constructor(data?: PartialMessage<WorkflowAttributesDeleteResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "flyteidl.admin.WorkflowAttributesDeleteResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WorkflowAttributesDeleteResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WorkflowAttributesDeleteResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WorkflowAttributesDeleteResponse;

  static equals(a: WorkflowAttributesDeleteResponse | PlainMessage<WorkflowAttributesDeleteResponse> | undefined, b: WorkflowAttributesDeleteResponse | PlainMessage<WorkflowAttributesDeleteResponse> | undefined): boolean;
}

