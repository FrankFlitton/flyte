// @generated by protoc-gen-es v1.4.2 with parameter "target=js+dts+ts,keep_empty_files=false"
// @generated from file flyteidl/admin/schedule.proto (package flyteidl.admin, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * Represents a frequency at which to run a schedule.
 *
 * @generated from enum flyteidl.admin.FixedRateUnit
 */
export const FixedRateUnit = proto3.makeEnum(
  "flyteidl.admin.FixedRateUnit",
  [
    {no: 0, name: "MINUTE"},
    {no: 1, name: "HOUR"},
    {no: 2, name: "DAY"},
  ],
);

/**
 * Option for schedules run at a certain frequency e.g. every 2 minutes.
 *
 * @generated from message flyteidl.admin.FixedRate
 */
export const FixedRate = proto3.makeMessageType(
  "flyteidl.admin.FixedRate",
  () => [
    { no: 1, name: "value", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "unit", kind: "enum", T: proto3.getEnumType(FixedRateUnit) },
  ],
);

/**
 * Options for schedules to run according to a cron expression.
 *
 * @generated from message flyteidl.admin.CronSchedule
 */
export const CronSchedule = proto3.makeMessageType(
  "flyteidl.admin.CronSchedule",
  () => [
    { no: 1, name: "schedule", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "offset", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * Defines complete set of information required to trigger an execution on a schedule.
 *
 * @generated from message flyteidl.admin.Schedule
 */
export const Schedule = proto3.makeMessageType(
  "flyteidl.admin.Schedule",
  () => [
    { no: 1, name: "cron_expression", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "ScheduleExpression" },
    { no: 2, name: "rate", kind: "message", T: FixedRate, oneof: "ScheduleExpression" },
    { no: 4, name: "cron_schedule", kind: "message", T: CronSchedule, oneof: "ScheduleExpression" },
    { no: 3, name: "kickoff_time_input_arg", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

